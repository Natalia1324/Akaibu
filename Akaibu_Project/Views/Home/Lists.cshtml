
@model Akaibu_Project.Entions.Users
@{
    
    ViewData["Title"] = "Lists";


}

<!DOCTYPE html>
<html>
<head>
    <title>User List Page</title>
</head>
<body>

    <style>
    .list-button {
        display: block;
        width: 180px;
        height: 60px;
        margin-bottom: 10px;
            background-color: #E9987D;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }
</style>


<div>
    <h1>Chooose a list:</h1>
    <button class="list-button" onclick="displayList('Finished')">Show Finished List</button>
    <button class="list-button" onclick="displayList('Watched')">Show Watched List</button>
    <button class="list-button" onclick="displayList('Planned')">Show Planned List</button>
</div>

    <div id="listContainer"></div>

    <script>
        function displayList(listType) {
        var listContainer = document.getElementById('listContainer');
        var list = [];


        if (listType === 'Finished') {
            list = @Html.Raw(Json.Serialize(Model.lists.Finished.Select(item => new { item.LastEpizod, item.StatusValue, AnimeAuthor = item.AnimeTitle, AnimeTitle = item.AnimeAuthor })));
        } else if (listType === 'Watched') {
            list = @Html.Raw(Json.Serialize(Model.lists.Watched.Select(item => new { item.LastEpizod, item.StatusValue, AnimeAuthor = item.AnimeTitle, AnimeTitle = item.AnimeAuthor })));
        } else if (listType === 'Planned') {
            list = @Html.Raw(Json.Serialize(Model.lists.Planned.Select(item => new { item.LastEpizod, item.StatusValue, AnimeAuthor = item.AnimeTitle, AnimeTitle = item.AnimeAuthor })));
        }


        listContainer.innerHTML = '';


        if (list.length === 0) {
            listContainer.innerHTML += 'List is empty';
        } else {

            var table = document.createElement('table');
            table.style.borderCollapse = 'collapse';
            table.style.width = '100%';


            var headerRow = table.insertRow(0);


            var propertiesToDisplay = ['lastEpizod', 'statusValue', 'animeAuthor', 'animeTitle'];

            for (var j = 0; j < propertiesToDisplay.length; j++) {
                var headerCell = headerRow.insertCell(j);
                headerCell.innerHTML = propertiesToDisplay[j];
                headerCell.style.border = '1px solid #ddd';
                headerCell.style.padding = '8px';
            }


            for (var i = 0; i < list.length; i++) {
                var row = table.insertRow(i + 1);
                for (var j = 0; j < propertiesToDisplay.length; j++) {
                    var cell = row.insertCell(j);
                    cell.innerHTML = list[i][propertiesToDisplay[j]];
                    cell.style.border = '1px solid #ddd';
                    cell.style.padding = '8px';
                }
            }

            listContainer.appendChild(table);
        }
    }
    </script>

</body>
</html>


