@{
    ViewData["Title"] = "Login";
}

@model Akaibu_Project.Entions.Users
<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
    <link rel="stylesheet" type="text/css" href="~/css/login.css">

</head>
<body>

    <div class="register-container">
        <div class="left-section">
            <h1 id="hello-text">Welcome Back!</h1>
            <p id="glad-text">=^v^=</p>

        </div>
        <div class="right-section">
            <h2 style="margin-bottom: 50px;">Login to Your Account</h2>
            @using (Html.BeginForm("Login", "Home", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="form-field">
                    @Html.TextBoxFor(model => model.Nick, new { @placeholder = "Nick", @required = "required" })
                </div>
                <br>
                <div class="form-field">
                    @Html.PasswordFor(model => model.Password, new { @placeholder = "Password", @required = "required" })
                </div>
                <br>
                <button type="submit">Sign in</button>
                <br>
                <div class="form-field error-message">
                    @Html.ValidationSummary()
                </div>
            }
        </div>
    </div>
    <script>
        // Wywołaj funkcję pokazującą błąd
        function pokazBlad() {
            var error = document.querySelector('.error-message');
            error.style.display = 'block';
            setTimeout(function () {
                error.style.display = 'none';
            }, 9999); // Ukryj błąd
        }

        // Wywołanie funkcji na początku, aby wyczyścić błąd po załadowaniu strony
        document.addEventListener('DOMContentLoaded', function () {
            var error = document.querySelector('.error-message');
            if (error) {
                setTimeout(function () {
                    error.style.display = 'none';
                }, 9999); // Ukryj błąd
            }
        });

    </script>
</body>
</html>
