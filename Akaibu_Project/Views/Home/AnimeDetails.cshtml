@using Akaibu_Project.Entions
@model Akaibu_Project.Entions.DBAnime

@{
    ViewData["Title"] = "Anime Details";
}

<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css" />
</head>

<style>

    #dit1button {
        background-color: #BA7F79;
        color: #000;
    }

    #dit2button {
        background-color: #E19D80;
        color: #000;
    }

    #dit3button {
        background-color: #D4A6A3;
        color: #000;
    }

    /* Styl dla tabeli odcinków */
    .table {
        width: 100%;
        margin-bottom: 1rem;
        color: #E9987D; /* Kolor tekstu */
        border-collapse: collapse;
    }

        /* Kolor napisów w nagłówkach tabeli */
        .table th {
            color: #E9987D; /* Kolor tekstu */
        }
h4{
        color: #BA7F79;
}
h3{
        color: #BA7F79;
}

        .table th, .table td {
            padding: 0.75rem;
            vertical-align: top;
            border-top: 1px solid #BA7F79; /* Kolor linii */
        }

        .table thead th {
            vertical-align: bottom;
            border-bottom: 2px solid #BA7F79;
        }

        .table tbody + tbody {
            border-top: 2px solid #BA7F79;
        }

</style>

<h2>Anime Details</h2>

<div>
    <h4>@Model.Title</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            Author
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Author)
        </dd>

        <dt class="col-sm-2">
            Number of Episodes
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.NumberOfEpisodes)
        </dd>

        <dt class="col-sm-2">
            Short Story
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ShortStory)
        </dd>

        <dt class="col-sm-2">
            Tag
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Tag)
        </dd>

        <dt class="col-sm-2">
            Date of Production Start
        </dt>
        <dd class="col-sm-10">
            @Model.DateOfProductionStart.ToString("dd.MM.yyyy")
        </dd>

        <dt class="col-sm-2">
            Date of Production Finish
        </dt>
        <dd class="col-sm-10">
            @{
                String finishProduction = Model.DateOfProductionFinish.HasValue ? Model.DateOfProductionFinish.Value.ToString("dd.MM.yyyy") : "In progress";
            }
            @finishProduction
        </dd>

        <dt class="col-sm-2">
            Status Anime
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StatusAnime)
        </dd>

        <dt class="col-sm-2">
            Rating
        </dt>
        <dd class="col-sm-10">
            @{
                double averageRating = Model.Comments.Any() ? Model.Comments.Average(comment => Double.Parse(comment.MyRating)) : 0.0;
            }
            @for (int i = 0; i < (int)Math.Round(averageRating); i++)
            {
                <i class="fas fa-star"></i>
            }
            (@averageRating.ToString("0.00"))
        </dd>
    </dl>


    <h3>Episodes</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Number</th>
                <th>Description</th>
                <th>Length (minutes)</th>
                <th>Release Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var episode in Model.Episods)
            {
                <tr>
                    <td>@episode.Title</td>
                    <td>@episode.Number</td>
                    <td>@episode.Description</td>
                    <td>@episode.EpisodeLenght.TotalMinutes</td>
                    <td>@episode.DateTheEpisodWasAdded.ToString("dd.MM.yyyy")</td>
                </tr>
            }
        </tbody>
    </table>


    @if (ViewContext.HttpContext.Session.GetObject<Users>("LoggedUser")?.isLogged == true)
    {
        
            <form method="post" action="@Url.Action("AddToFinishedList", "Home")">
                @Html.HiddenFor(model => model.Id)
            <button id="dit1button" style=" border-radius: 7px; type="submit">Add to Finished List</button>
            </form>
        <br>

            <form method="post" action="@Url.Action("AddToCurrentlyWatchedList", "Home")">
                @Html.HiddenFor(model => model.Id)
            <button id="dit2button" style=" border-radius: 7px; type="submit">Add to Currently Watched List</button>
            </form>
        <br>

            <form method="post" action="@Url.Action("AddToPlannedList", "Home")">
                @Html.HiddenFor(model => model.Id)
            <button id="dit3button" style=" border-radius: 7px; type="submit">Add to Planned List</button>
            </form>
        }
        </div>
